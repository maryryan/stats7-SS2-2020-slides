annotate("text", x=250, y=0, label="250", color="red", size=6, vjust=1)+
coord_cartesian(expand=F, clip = "off")
glimpse(video_games)
range(video_games$release_year)
length(unique(video_games$metadata_genres))
unique(video_games$metadata_genres)
summary(lm(metrics_review_score ~ length_all_play_styles_median + features_handheld + release_rating, data=video_games))
range(video_games$features_handheld)
unique(video_games$features_handheld)
head(video_games)
head(video_games$title)
head(video_games$release_console)
1/9
(1/9)*75
(1/9)*.75
9*4
3/36
1/9 - 3/36
(1/9)*0.25
.083+0.278
.083+0.0278
.083+0.0278+0.005
.083+0.03+0.005
.083+0.04+0.005
.083+0.04
.123-1/9
.08+0.04
.12-1/9
.08-.009
.04-.009
8/9
103+15206+5187
221+4+34
.4*.6
.4+.6-.24
.35+.15
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache=TRUE)
knitr::opts_chunk$set(fig.align='center', out.width="63%", warning=FALSE)
events <- c("A", "B", "C", "D")
probs <- c("P(A)", "P(B)", "P(C)", "P(D)")
probTable <- rbind(events, probs)
rownames(probTable) <- c("Events", "Probability")
probTable %>%
kable(format="html") %>%
kable_styling()
events <- c("A", "B", "C", "D")
probs <- c("P(A)", "P(B)", "P(C)", "P(D)")
probTable <- rbind(events, probs)
rownames(probTable) <- c("Events", "Probability")
probTable %>%
knitr::kable(format="html") %>%
kable_styling()
install.packages("kableExtra")
events <- c("A", "B", "C", "D")
probs <- c("P(A)", "P(B)", "P(C)", "P(D)")
probTable <- rbind(events, probs)
rownames(probTable)[2] <- c("Probability")
probTable %>%
knitr::kable(format="html") %>%
column_spec(1, bold = T) %>%
add_header_above(c("Events"))
events <- c("A", "B", "C", "D")
probs <- c("P(A)", "P(B)", "P(C)", "P(D)")
probTable <- rbind(events, probs)
rownames(probTable)[2] <- c("Probability")
probTable %>%
knitr::kable(format="html") %>%
#column_spec(1, bold = T) %>%
add_header_above(c("Events"))
events <- c("A", "B", "C", "D")
probs <- c("P(A)", "P(B)", "P(C)", "P(D)")
probTable <- rbind(events, probs)
rownames(probTable)[2] <- c("Probability")
probTable %>%
knitr::kable() %>%
column_spec(1, bold = T) %>%
add_header_above(c("Events"=4))
#install.packages( 'tidyverse' )
#install.packages( 'readxl' )
library( tidyverse, quietly=T, warn.conflicts = F )
library( knitr, quietly=T, warn.conflicts = F )
library( readxl, quietly=T, warn.conflicts = F )
#library( tufte, quietly=T, warn.conflicts = F )
library( quantmod, quietly=T, warn.conflicts = F )
library(kableExtra)
events <- c("A", "B", "C", "D")
probs <- c("P(A)", "P(B)", "P(C)", "P(D)")
probTable <- rbind(events, probs)
rownames(probTable)[2] <- c("Probability")
probTable %>%
knitr::kable(format="html") %>%
column_spec(1, bold = T) %>%
add_header_above(c("Events"=4))
events <- c("A", "B", "C", "D")
probs <- c("P(A)", "P(B)", "P(C)", "P(D)")
probTable <- rbind(events, probs)
rownames(probTable)[2] <- c("Probability")
probTable %>%
knitr::kable(format="latex") %>%
column_spec(1, bold = T) %>%
add_header_above(c("Events"=4))
puppies <- as.character(0:4)
puppiesProb <- c(0.3, 0.2, " ", 0.1)
puppiesTable <- rbind(puppies, puppiesProb)
rownames(puppiesTable) <- c("Number of Puppies", "Probability")
knitr::kable(puppiesTable, format="html")
puppies <- as.character(0:4)
puppiesProb <- c("0.3", "0.2", " ", "0.1")
puppiesTable <- rbind(puppies, puppiesProb)
rownames(puppiesTable) <- c("Number of Puppies", "Probability")
knitr::kable(puppiesTable, format="html")
puppies <- as.character(1:4)
puppiesProb <- c("0.3", "0.2", " ", "0.1")
puppiesProbFull <- c(0.3, 0.2, 0.4, 0.1)
puppiesTable <- rbind(puppies, puppiesProb, puppiesProbFull)
rownames(puppiesTable) <- c("Number of Puppies", "Probability", "Probability")
puppiesTable %>%
select(-3) %>%
knitr::kable(format="html") %>%
column_spec(2:5, width = "5em")
puppies <- as.character(1:4)
puppiesProb <- c("0.3", "0.2", " ", "0.1")
puppiesProbFull <- c(0.3, 0.2, 0.4, 0.1)
puppiesTable <- rbind(puppies, puppiesProb, puppiesProbFull)
rownames(puppiesTable) <- c("Number of Puppies", "Probability", "Probability")
puppiesTable %>%
as.data.frame() %>%
select(-3) %>%
knitr::kable(format="html") %>%
column_spec(2:5, width = "5em")
puppies <- as.character(1:4)
puppiesProb <- c("0.3", "0.2", " ", "0.1")
puppiesProbFull <- c(0.3, 0.2, 0.4, 0.1)
puppiesTable <- rbind(puppies, puppiesProb, puppiesProbFull)
rownames(puppiesTable) <- c("Number of Puppies", "Probability", "Probability")
puppiesTable %>%
as.data.frame() %>%
slice(-3) %>%
knitr::kable(format="html") %>%
column_spec(2:5, width = "5em")
puppies <- as.character(1:4)
puppiesProb <- c("0.3", "0.2", " ", "0.1")
puppiesProbFull <- c(0.3, 0.2, 0.4, 0.1)
puppiesTable <- rbind(puppies, puppiesProb, puppiesProbFull)
rownames(puppiesTable) <- c("Number of Puppies", "Probability", "Probability")
puppiesTable %>%
as.data.frame() %>%
slice(1:2) %>%
knitr::kable(format="html") %>%
column_spec(2:5, width = "5em")
puppies <- as.character(1:4)
puppiesProb <- c("0.3", "0.2", " ", "0.1")
puppiesProbFull <- c(0.3, 0.2, 0.4, 0.1)
puppiesTable <- rbind(puppies, puppiesProb, puppiesProbFull)
rownames(puppiesTable) <- c("Number of Puppies", "Probability", "Probability")
puppiesTable[1:2,] %>%
knitr::kable(format="html") %>%
column_spec(2:5, width = "5em")
version
install.packages("wdi")
install.packages("WDI")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache=TRUE)
knitr::opts_chunk$set(fig.align='center', out.width="63%", warning=FALSE, fig.retina=3)
library(WDI)
gdp <- read_csv("2019_gdp.csv", header=T)
gdp <- read.csv("2019_gdp.csv", header=T)
pop <- read.csv("2019_pop.csv", header=T)
#avocado <- read_excel( "avocado.xlsx" )
glimpse(gdp)
WDIsearch('pop')
WDIsearch('pop')[1:10,]
WDIsearch('population')[1:10,]
WDIsearch('pop')[467,]
WDIsearch('pop')[464,]
gdp2019 <- WDI(indicator='GDPPCKD', start=2019, end=2019)
gdp2019 <- WDI(indicator='GDPPCKD', start=2019, end=2019)
pop2019 <- WDI(indicator='IN.EC.POP.TOTL', start=2019, end=2019)
glimspse(gdp2019)
glimpse(gdp2019)
head(gdp2019)
gdp2019 <- WDI(indicator='GDPPCKD', start=2018, end=2019)
head(gdp2019)
gdp2019 <- WDI(indicator='GDPPCKD', country="all", start=2019, end=2019)
head(gdp2019)
gdp2019 <- WDI(indicator='GDPPCKD', country="all", start=2018, end=2019)
head(gdp2019)
gdp2019 <- WDI(indicator='GDPPCKD', country="all", start=2018, end=2018)
head(gdp2019)
gdp2019 <- WDI(indicator='GDPPCKD', country="all", start=2015, end=2016)
head(gdp2019)
gdp <- read_excel( "HistoricalRealGDPValues.xlsx" )
library( readxl, quietly=T, warn.conflicts = F )
gdp <- read_excel( "HistoricalRealGDPValues.xlsx" )
gdp <- read_excel( "/Users/maryryan/Desktop/teaching-classes/stats7-SS2-2020/stats7-SS2-2020-slides/lec1/HistoricalRealGDPValues.xlsx" )
gdp <- read_excel( "/Users/maryryan/Desktop/teaching-classes/stats7-SS2-2020/stats7-SS2-2020-slides/lec1/HistoricalRealGDPValues.xls" )
pop <- read_excel( "/Users/maryryan/Desktop/teaching-classes/stats7-SS2-2020/stats7-SS2-2020-slides/lec1/HistoricalPopulationValues.xls" )
glimpse(gdp)
gdp2019 <- WDI(indicator='GDPPCKD', country="all", start=2012, end=2012)
head(gdp2019)
gdp2012 <- WDI(indicator='GDPPCKD', country="all", start=2010, end=2010)
head(gdp2019)
head(gdp2012)
gdp2012
gdp2012 <- WDI(indicator='GDPPCKD', country="all", start=2010, end=2011)
gdp2012
install.packages('wbstats')
library(wbstats)
new_wb_cache <- wbcache()
wb_dat <- wb(indicator = c("NY.GDP.PCAP.CD", "IN.EC.POP.TOTL"))
names(wb_dat)
head(wb_dat)
wb_dat[which(wb_dat$indicatorID == "IN.EC.POP.TOTL"),1:10]
wbsearch("pop", cache = new_wb_cache)
wbsearch("pop*", cache = new_wb_cache)
new_wb_cache <- wbcache()
wbsearch("pop", cache = new_wb_cache)
wbsearch("population.*", cache = new_wb_cache)
WDIsearch('IN.EC.POP.TOTL')
WDIsearch('pop')
WDIsearch('pop')[464,]
wbsearch("Population.*thousands", cache = new_wb_cache)
bloop <- wbsearch("Population.*thousands", cache = new_wb_cache)
dim(bloop)
dim(bloop)[,2]
bloop[,2]
bloop <- wbsearch("^population.*thousands", cache = new_wb_cache)
dim(bloop)
bloop
wb_dat <- wb(indicator = c("NY.GDP.PCAP.CD", "IN.EC.POP.TOTL"))
dim(wb_dat)
wb_dat[which(wb_dat$indicatorID=="IN.EC.POP.TOTL"),1:10]
wb_dat[which(wb_dat$indicator=="IN.EC.POP.TOTL"),1:10]
wb_dat[,1:10]
glimpse(wb_dat)
unique(wb_dat$indicatorID)
gdp.pop.2019 <- wb_dat %>%
dplyr::filter(date == "2019")
glimpse(gdp.pop.2019)
gdp.pop.2019 <- wb_dat %>%
dplyr::filter(date == "2019") %>%
select(-indicator) %>%
spread(key="indicatorID", value="value")
glimpse(gdp.pop.2019)
wb_dat %>%
dplyr::filter(date == "2019") %>%
select(-indicator) %>%
glimpse()
wb_dat %>%
dplyr::filter(date == "2019") %>%
select(-indicator) %>%
spread(key="indicatorID", value="value") %>%
glimpse()
gdp.pop.2019 <- wb_dat %>%
dplyr::filter(date == "2019")
dim(gdp.pop.2019)
wb_countries <- wbcountries()
wb_dat <- merge(wb_dat, y = wb_countries[c("iso2c", "region")], by = "iso2c", all.x = TRUE)
wb_dat %>%
dplyr::filter(date == "2019") %>%
glimpse()
wb_dat <- subset(wb_dat, region != "Aggregates")
wb_dat %>%
dplyr::filter(date == "2019") %>%
glimpse()
wb_dat %>%
dplyr::filter(date == "2018") %>%
glimpse()
unique(wb_dat$indicatorID)
wb_dat["IN.EC.POP.TOTL",]
wb_dat <- wb(indicator = c("NY.GDP.PCAP.KD", "SP.DYN.LE00.IN", "SP.DYN.IMRT.IN"))
wb_dat <- merge(wb_dat, y = wb_countries[c("iso2c", "region")], by = "iso2c", all.x = TRUE)
wb_dat <- subset(wb_dat, region != "Aggregates")
wb_dat$indicatorID[wb_dat$indicatorID == "NY.GDP.PCAP.KD"] <- "GDP"
wb_dat$indicatorID[wb_dat$indicatorID == "SP.DYN.LE00.IN"] <- "life_expectancy"
wb_dat$indicatorID[wb_dat$indicatorID == "SP.DYN.IMRT.IN"] <- "infant_mortality"
glimpse(wb_dat)
wb_dat %>%
dplyr::filter(date == "20012") %>%
select(-indicator) %>%
spread(key="indicatorID", value="value") %>%
glimpse()
wb_dat %>%
dplyr::filter(date == "2012") %>%
select(-indicator) %>%
spread(key="indicatorID", value="value") %>%
glimpse()
gdp.pop.2019 <- wb_dat %>%
dplyr::filter(date == "2012") %>%
select(-indicator) %>%
spread(key="indicatorID", value="value")
gdp.mort.2019 <- wb_dat %>%
dplyr::filter(date == "2012") %>%
select(-indicator) %>%
spread(key="indicatorID", value="value")
gdp.2019 <- wb_dat %>%
dplyr::filter(date == "2019") %>%
select(-indicator) %>%
spread(key="indicatorID", value="value")
dim(gdp.2019)
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point()
gdp.2019 <- wb_dat %>%
dplyr::filter(date == "2008") %>%
select(-indicator) %>%
spread(key="indicatorID", value="value")
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point()
gdp.2019 <- wb_dat %>%
dplyr::filter(date == "2018") %>%
select(-indicator) %>%
spread(key="indicatorID", value="value")
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point()
gdp.2019 <- wb_dat %>%
dplyr::filter(date == "2008") %>%
select(-indicator) %>%
spread(key="indicatorID", value="value")
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point()
gdp.2019 <- wb_dat %>%
dplyr::filter(date == "2015") %>%
select(-indicator) %>%
spread(key="indicatorID", value="value")
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point()
gdp.2019 <- wb_dat %>%
dplyr::filter(date == "2019") %>%
select(-indicator) %>%
spread(key="indicatorID", value="value")
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point()
gdp.2019 <- wb_dat %>%
dplyr::filter(date == "2018") %>%
select(-indicator) %>%
spread(key="indicatorID", value="value")
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point()
gdp.2019 <- wb_dat %>%
dplyr::filter(date == "2017") %>%
select(-indicator) %>%
spread(key="indicatorID", value="value")
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point()
new_wb_cache <- wbcache()
#new_wb_cache <- wbcache()
wb_dat <- wb(indicator = c("NY.GDP.PCAP.KD", "SP.DYN.LE00.IN", "SP.DYN.IMRT.IN"))
wb_countries <- wbcountries()
wb_dat <- merge(wb_dat, y = wb_countries[c("iso2c", "region")], by = "iso2c", all.x = TRUE)
wb_dat <- subset(wb_dat, region != "Aggregates")
wb_dat$indicatorID[wb_dat$indicatorID == "NY.GDP.PCAP.KD"] <- "GDP"
wb_dat$indicatorID[wb_dat$indicatorID == "SP.DYN.LE00.IN"] <- "life_expectancy"
wb_dat$indicatorID[wb_dat$indicatorID == "SP.DYN.IMRT.IN"] <- "infant_mortality"
gdp.2019 <- wb_dat %>%
dplyr::filter(date == "2017") %>%
select(-indicator) %>%
spread(key="indicatorID", value="value")
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point() +
theme_minimal() +
ylab("Infant Mortality")
25/2
50+12.5
25/2
gdp.2019 <- wb_dat %>%
dplyr::filter(date == "2017") %>%
select(-indicator) %>%
spread(key="indicatorID", value="value") %>%
mutate(outlier=ifelse(GDP > 150000 | (GDP < 25000 & infant_mortality > 63 & GDP > 12500), 1, 0))
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point() +
theme_minimal() +
ylab("Infant Mortality") +
geom_label(aes(label=outlier), fill="white")
gdp.2019 <- wb_dat %>%
dplyr::filter(date == "2017") %>%
select(-indicator) %>%
spread(key="indicatorID", value="value") %>%
mutate(outlier=ifelse(GDP > 150000 | (GDP < 25000 & infant_mortality > 63 & GDP > 12500), country, NA))
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point() +
theme_minimal() +
ylab("Infant Mortality") +
geom_label(aes(label=outlier), na.rm=T, fill="white")
gdp.2019 <- wb_dat %>%
dplyr::filter(date == "2017") %>%
select(-indicator) %>%
spread(key="indicatorID", value="value") %>%
mutate(outlier=ifelse(GDP > 150000 | (GDP < 25000 & infant_mortality > 63 & GDP > 10000), country, NA))
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point() +
theme_minimal() +
ylab("Infant Mortality") +
geom_label(aes(label=outlier), na.rm=T, fill="white")
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point() +
theme_minimal() +
ylab("Infant Mortality") +
geom_label(aes(label=outlier), na.rm=T, fill="white", vjust=1)
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point() +
theme_minimal() +
ylab("Infant Mortality") +
geom_label(aes(label=outlier), na.rm=T, fill="white", vjust=-1)
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point() +
theme_minimal() +
ylab("Infant Mortality") +
geom_label(aes(label=outlier), na.rm=T, fill="white", vjust=-0.5, hjust=0.5)
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point() +
theme_minimal() +
ylab("Infant Mortality") +
geom_label(aes(label=outlier), na.rm=T, fill="white", vjust=-0.5, hjust=-0.5)
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point() +
theme_minimal() +
ylab("Infant Mortality") +
geom_label(aes(label=outlier), na.rm=T, fill="white", vjust=-0.5, hjust=-0.3)
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point() +
theme_minimal() +
ylab("Infant Mortality") +
geom_label(aes(label=outlier), na.rm=T, fill="white", vjust=-0.5, hjust=0.3)
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point() +
theme_minimal() +
ylab("Infant Mortality") +
geom_label(aes(label=outlier), na.rm=T, fill="white", vjust=-0.5, hjust=1)
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point() +
theme_minimal() +
ylab("Infant Mortality") +
geom_label(aes(label=outlier), na.rm=T, fill="white", vjust=-0.5, hjust=-1)
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point() +
theme_minimal() +
ylab("Infant Mortality") +
geom_label(aes(x=10000, y=62, label="Equitorial Guinea"), fill="white", vjust=-0.5, hjust=-0.1)
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point() +
theme_minimal() +
ylab("Infant Mortality") +
geom_label(aes(x=10000, y=62, label="Equitorial Guinea"), fill="white", vjust=-0.5, hjust=-0.1)+
geom_label(aes(x=18000, y=7, label="Morrocco"), fill="white", vjust=-0.5, hjust=0.1)
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point() +
theme_minimal() +
ylab("Infant Mortality") +
geom_label(aes(x=10000, y=62, label="Equitorial Guinea"), fill="white", vjust=-0.5, hjust=-0.1)+
geom_label(aes(x=180000, y=7, label="Morrocco"), fill="white", vjust=-0.5, hjust=0.1)
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point() +
theme_minimal() +
ylab("Infant Mortality") +
geom_label(aes(x=10000, y=62, label="Equitorial Guinea"), fill="white", vjust=-0.5, hjust=-0.1)+
geom_label(aes(x=170000, y=7, label="Morrocco"), fill="white", vjust=-0.5, hjust=0.1)
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point() +
theme_minimal() +
ylab("Infant Mortality") +
geom_label(aes(x=10000, y=62, label="Equitorial Guinea"), fill="white", vjust=-0.5, hjust=-0.1)+
geom_label(aes(x=160000, y=7, label="Morrocco"), fill="white", vjust=-0.5, hjust=0.1)
gdp.2019 %>%
ggplot(aes(x=GDP, y=infant_mortality))+
geom_point() +
theme_minimal() +
ylab("Infant Mortality") +
geom_label(aes(x=10000, y=62, label="Equitorial Guinea"), fill="white", vjust=-0.5, hjust=-0.1)+
geom_label(aes(x=160000, y=6, label="Morrocco"), fill="white", vjust=-0.5, hjust=0.1)
version
install.packages("pagedown")
library(pagedown)
pagedown::chrome_print(/Users/maryryan/Desktop/teaching-classes/stats7-SS2-2020/stats7-SS2-2020-slides/lec1/stats7-SS2-2020-lec1.Rmd)
pagedown::chrome_print("/Users/maryryan/Desktop/teaching-classes/stats7-SS2-2020/stats7-SS2-2020-slides/lec1/stats7-SS2-2020-lec1.Rmd")
install_phantomjs()
install.packages("webshot")
library(webshot)
install_phantomjs()
?install_phantomjs
install_phantomjs(baseURL="https://bitbucket.org/ariya/phantomjs/downloads/")
?normalizePath
file.name <- paste0("file://", normalizePath("stats7-SS2-2020-lec1.html"))
file.name <- paste0("file://", normalizePath("lec1/stats7-SS2-2020-lec1.html"))
file.name
webshot(file.name, "lec1.pdf")
